Import("mainEnv", "libEnv")

main_cpp = File("main.cpp")

def dive(directory: str, depth: int):
	if depth <= 0: return []
	return Glob(F"{directory}{'/*' * depth}.cpp") + dive(directory, depth - 1)

mainSourceList = dive(directory="maze_engine", depth=2) + dive(directory="application", depth=3)

mainProgram = mainEnv.Program(target="run/maze_engine", source=[main_cpp] + mainSourceList)

catch2Object = libEnv.StaticObject(File("test/catch2/catch_amalgamated.cpp"))

testSourceList = Glob("test/*.cpp")

testProgram = mainEnv.Program(target="run/test_suite", source=[*mainSourceList, *testSourceList, catch2Object])

compilationDatabase = mainEnv.CompilationDatabase()

Return("mainProgram", "testProgram", "compilationDatabase")
