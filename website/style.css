/*
	Reset.

	I think it is okay
	to use the wildcard selector here
	because the webpage is small.
*/
* {
	margin: 0;
	padding: 0;
	box-sizing: border-box; /* Ensure padding and border are included in width & height */
}

html, body {
	/* Shape */
	margin: 0;
	padding: 0;
	min-height: 100svh;
	width: 100%;

	/* Text */
	font-family: Arial, Helvetica, sans-serif;

	/* Color */
	color: black;
	background-color: #AEC6CF;

	/* Flexbox */
	display: flex;
	flex-direction: column;
	justify-content: flex-start;
	align-items: center;
}

.main_container {
	display: flex;
	flex-direction: column; /* Align items vertically. */

	justify-content: center;
	align-items: center;

	min-height: 100svh;
	padding: 20px;

	gap: calc(12 * min(1svw, 1svh));

	@media (orientation: landscape) {
		flex-direction: row; /* Align items horizontally */
	}

	form {
		display: grid;
		grid-template-columns: auto 1fr; /* Labels on the left, inputs on the right */

		padding: 1.5% 2%;
		width: 100%;
		max-width: 400px; /* Ensure form doesn't get too wide */

		background-color: #f0f0f0;
		box-shadow: 0 5px 15px rgb(0 0 0 / 10%);
		border-radius: 15px;

		/* Default gap for portrait mode. */
		gap: 8px;

		@media (orientation: landscape) {
			gap: 2svh;
		}

		/* Screen with small height. */
		@media (max-height: 440px) {
			gap: 1svh;
		}

		label {
			font-size: clamp(12px, min(3.75svw, 3.75svh), 110%);
			color: #333;
			text-align: right; /* Align labels to the right */
		}

		input {
			color: black;

			&:focus {
				outline: 2px solid blue;
				transition: 0.15s ease;
			}

			&[type="checkbox"] {
				width: auto;
			}


			/*
				It seems on Chrome that the spin buttons for `input` elements
				of the type "number" are glitchy with Emscripten such that
				they may continue incrementing or decrementing
				the value even if the mouse is not pressed on it.

				That is why I am removing the spin buttons here.
			*/
			&[type=number]::-webkit-inner-spin-button,
			&[type=number]::-webkit-outer-spin-button {
				-webkit-appearance: none;
				appearance: none;
				margin: 0;
			}
		}

		input[type="number"], select {
			width: 100%;
			max-width: 100%; /* Ensure inputs don't exceed form container */
			border: 1px solid #ccc;
			border-radius: 5px;
			font-size: clamp(14px, min(3.75svw, 3.75svh), 100%);
			box-shadow: inset 0 1px 3px rgb(0 0 0 / 10%);
		}

		button {
			border: none;
			border-radius: 5px;
			padding: 0.6rem 1.2rem;
			font-size: clamp(10px, min(3.75svw, 3.75svh), 110%);
			color: white;
			cursor: pointer;

			grid-column: span 2; /* Makes buttons span across both columns */
			
			background-color: #66cdaa;

			&:hover {
				background-color: #80d1b4;
			}

			&:active {
				background-color: #4ca589;
				box-shadow: inset 2px 2px 3px rgb(0 0 0 / 60%);
			}
		}

		p {
			text-align: center;
			grid-column: span 2;
		}
	}
}

.input_with_units {
	display: flex;
	width: 100%;

	& > * {
		flex: 1;
	}

	& span {
		margin-left: 0.5rem;
		font-size: clamp(10px, min(3.75svw, 3.75svh), 100%);
		color: #333;
		display: flex;
		align-items: center;
		justify-content: center;
	}
}
